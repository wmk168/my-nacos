#引入多个配置文件，以application开头
spring.profiles.include=baseConfig

server.port=9015
spring.application.name=my-sentinel
#多个不同的注册中心支持，注意：如果另一个注册中心不稳定，那么提供者也有可能出现异常，因为负载均衡自动切换到不同的注册中心获取提供者
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848,127.0.0.1:8848
#没有用,只能通过命令指定
nacos.logging.path=E:/home/nacos/logs
#没有用,只能通过命令指定
com.alibaba.nacos.naming.cache.dir=E:/home/nacos/naming
#没有用，只能通过命令指定，或者代码，作用是同一个客户端appName名称启动用进程pid区别，保证在sentinel控制台统计正确
csp.sentinel.log.use.pid=true

# 配置sentinel控制台的地址
spring.cloud.sentinel.transport.dashboard=127.0.0.1:8080
#如不配置，会自动选择一个IP注册
#spring.cloud.sentinel.transport.client-ip=127.0.0.1
#指定和控制台通信的端口，默认值8719
#如不设置，会自动从8719开始扫描，依次+1，直到找到未被占用的端口
#spring.cloud.sentinel.transport.port=8719
#心跳发送周期，默认值null
#但在SimpleHttpHeartbeatSender会用默认值10秒
spring.cloud.sentinel.transport.heartbeat-interval-ms=10000
#取消Sentinel控制台懒加载
spring.cloud.sentinel.eager=true
#Sentinel 日志文件所在的目录
spring.cloud.sentinel.log.dir=/home/sentinel/logs
#Sentinel自动化配置是否生效
spring.cloud.sentinel.enabled=true
#控制台指定目录，项目使用无效
csp.sentinel.log.dir=

#sentinel持久化==========>
#sentinel控制台修改后保存到nacos中心，测试成功，需要修改dashboard源码，有点麻烦，但是比较适合生产环境
#参考链接：http://www.itmuch.com/spring-cloud-alibaba/sentinel-rules-persistence-push-mode-using-nacos/
#如下规则都是从nacos读取配置信息
#配置nacos配置中心 datasource.flow的flow随便命名--流控制规则
spring.cloud.sentinel.datasource.flow.nacos.server-addr=${spring.cloud.nacos.discovery.server-addr}
spring.cloud.sentinel.datasource.flow.nacos.dataId=${spring.application.name}-flow-rules
spring.cloud.sentinel.datasource.flow.nacos.groupId=SENTINEL_GROUP
spring.cloud.sentinel.datasource.flow.nacos.rule-type=flow
#配置nacos配置中心-- 降级规则
spring.cloud.sentinel.datasource.degrade.nacos.server-addr=${spring.cloud.nacos.discovery.server-addr}
spring.cloud.sentinel.datasource.degrade.nacos.dataId=${spring.application.name}-degrade-rules
spring.cloud.sentinel.datasource.degrade.nacos.groupId=SENTINEL_GROUP
spring.cloud.sentinel.datasource.degrade.nacos.rule-type=degrade
#配置nacos配置中心-- 热点规则
spring.cloud.sentinel.datasource.param-flow.nacos.server-addr=${spring.cloud.nacos.discovery.server-addr}
spring.cloud.sentinel.datasource.param-flow.nacos.dataId=${spring.application.name}-param-flow-rules
spring.cloud.sentinel.datasource.param-flow.nacos.groupId=SENTINEL_GROUP
spring.cloud.sentinel.datasource.param-flow.nacos.rule-type=param-flow
#配置nacos配置中心---系统规则
spring.cloud.sentinel.datasource.system.nacos.server-addr=${spring.cloud.nacos.discovery.server-addr}
spring.cloud.sentinel.datasource.system.nacos.dataId=${spring.application.name}-system-rules
spring.cloud.sentinel.datasource.system.nacos.groupId=SENTINEL_GROUP
spring.cloud.sentinel.datasource.system.nacos.rule-type=system
#配置nacos配置中心--授权规则
spring.cloud.sentinel.datasource.authority.nacos.server-addr=${spring.cloud.nacos.discovery.server-addr}
spring.cloud.sentinel.datasource.authority.nacos.dataId=${spring.application.name}-authority-rules
spring.cloud.sentinel.datasource.authority.nacos.groupId=SENTINEL_GROUP
spring.cloud.sentinel.datasource.authority.nacos.rule-type=authority

